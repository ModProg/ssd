---
source: src/parser.rs
expression: "parse(include_str!(\"../data/test.svc\"), Namespace::new(\"__test__\")).unwrap()"
---
SsdcFile(
  namespace: Namespace(
    components: [
      "__test__",
    ],
  ),
  imports: [
    Import(
      path: Namespace(
        components: [
          "std",
          "path",
          "Path",
        ],
      ),
      attributes: [],
    ),
    Import(
      path: Namespace(
        components: [
          "std",
          "error",
          "Error",
        ],
      ),
      attributes: [
        Attribute(
          name: Namespace(
            components: [
              "test",
            ],
          ),
          parameters: [],
        ),
        Attribute(
          name: Namespace(
            components: [
              "abcd",
            ],
          ),
          parameters: [
            Parameter(
              name: "foo",
              value: None,
            ),
            Parameter(
              name: "bar",
              value: Some("blub"),
            ),
          ],
        ),
      ],
    ),
  ],
  data_types: {
    "Rect": DataType(
      properties: {
        "height": NameTypePair(
          typ: Namespace(
            components: [
              "i32",
            ],
          ),
          attributes: [],
        ),
        "width": NameTypePair(
          typ: Namespace(
            components: [
              "i32",
            ],
          ),
          attributes: [],
        ),
        "x": NameTypePair(
          typ: Namespace(
            components: [
              "i32",
            ],
          ),
          attributes: [
            Attribute(
              name: Namespace(
                components: [
                  "test",
                ],
              ),
              parameters: [],
            ),
          ],
        ),
        "y": NameTypePair(
          typ: Namespace(
            components: [
              "i32",
            ],
          ),
          attributes: [],
        ),
      },
      attributes: [
        Attribute(
          name: Namespace(
            components: [
              "test",
            ],
          ),
          parameters: [],
        ),
      ],
    ),
  },
  enums: {
    "SomeEnum": Enum(
      values: {
        "A": EnumValue(
          value: Some(5),
          attributes: [],
        ),
        "B": EnumValue(
          value: None,
          attributes: [],
        ),
        "D": EnumValue(
          value: None,
          attributes: [
            Attribute(
              name: Namespace(
                components: [
                  "test",
                ],
              ),
              parameters: [],
            ),
          ],
        ),
      },
      attributes: [
        Attribute(
          name: Namespace(
            components: [
              "test",
            ],
          ),
          parameters: [],
        ),
      ],
    ),
  },
  services: {
    "Abcd": Service(
      dependencies: [
        Dependency(
          name: Namespace(
            components: [
              "some",
              "other",
              "Service",
            ],
          ),
          attributes: [
            Attribute(
              name: Namespace(
                components: [
                  "test",
                ],
              ),
              parameters: [],
            ),
          ],
        ),
      ],
      handlers: {
        "read_file": Handler(
          arguments: {
            "path": NameTypePair(
              typ: Namespace(
                components: [
                  "Path",
                ],
              ),
              attributes: [],
            ),
          },
          return_type: Some(Namespace(
            components: [
              "String",
            ],
          )),
          attributes: [
            Attribute(
              name: Namespace(
                components: [
                  "throws",
                ],
              ),
              parameters: [
                Parameter(
                  name: "Error",
                  value: None,
                ),
              ],
            ),
          ],
        ),
        "test": Handler(
          arguments: {
            "f": NameTypePair(
              typ: Namespace(
                components: [
                  "f32",
                ],
              ),
              attributes: [],
            ),
            "i": NameTypePair(
              typ: Namespace(
                components: [
                  "i32",
                ],
              ),
              attributes: [
                Attribute(
                  name: Namespace(
                    components: [
                      "whatever",
                    ],
                  ),
                  parameters: [],
                ),
              ],
            ),
          },
          return_type: Some(Namespace(
            components: [
              "String",
            ],
          )),
          attributes: [],
        ),
      },
      attributes: [
        Attribute(
          name: Namespace(
            components: [
              "test",
            ],
          ),
          parameters: [],
        ),
      ],
    ),
  },
)
